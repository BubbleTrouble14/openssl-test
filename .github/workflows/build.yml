name: Build NDK Ports

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  detect-projects:
      runs-on: ubuntu-latest
      outputs:
        matrix: ${{ steps.get-projects.outputs.matrix }}
      steps:
        - uses: actions/checkout@v4
          with:
            submodules: true

        - name: Set up JDK
          uses: actions/setup-java@v4
          with:
            distribution: "temurin"
            java-version: "17"

        - name: Set up Android NDK
          uses: nttld/setup-ndk@v1
          with:
            ndk-version: r25c
            local-cache: true

        - name: Get project information
          id: get-projects
          run: |
            chmod +x gradlew
            echo "Running exportProjectInfo..."
            ./gradlew exportProjectInfo -PndkPath=$ANDROID_NDK_HOME

            echo "Contents of projects.json:"
            cat build/project-info/projects.json

            echo "Creating matrix..."
            matrix=$(cat build/project-info/projects.json | jq -c '{"include": .project}')
            echo "Raw matrix value: $matrix"

            # Validate JSON structure
            echo "Matrix structure:"
            echo $matrix | jq '.'

            echo "Setting matrix output..."
            echo "matrix=$matrix" >> "$GITHUB_OUTPUT"

            # Show what was written to GITHUB_OUTPUT
            echo "Content of GITHUB_OUTPUT:"
            cat $GITHUB_OUTPUT

  build:
    needs: detect-projects
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{fromJson(needs.detect-projects.outputs.matrix)}}
      fail-fast: false

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: "17"
          distribution: "temurin"

      - name: Set up Android NDK
        uses: nttld/setup-ndk@v1
        with:
          ndk-version: r25c
          local-cache: true

      - name: Import GPG key
        uses: crazy-max/ghaction-import-gpg@v6
        with:
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.GPG_PASSPHRASE }}

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3

      - name: Build ${{ matrix.project.name }}
        run: |
          ./gradlew :${{ matrix.project.name }}:distZip \
            -PndkPath=$ANDROID_NDK_HOME \
            -Psigning.gnupg.keyName=${{ secrets.GPG_KEY_ID }} \
            -Psigning.gnupg.passphrase=${{ secrets.GPG_PASSPHRASE }}

      - name: Prepare release artifacts
        run: |
          cd build/distributions
          # Get the existing zip file name
          ZIP_FILE=$(ls *.zip)
          # Generate checksums without renaming
          sha256sum "$ZIP_FILE" > "$ZIP_FILE.sha256"
          sha1sum "$ZIP_FILE" > "$ZIP_FILE.sha1"
          # Generate signature
          gpg --armor --detach-sign "$ZIP_FILE"

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.project.name }}-build-artifacts
          path: |
            build/distributions/${{ matrix.project.name }}-${{ matrix.project.version }}.zip
            build/distributions/${{ matrix.project.name }}-${{ matrix.project.version }}.zip.asc
            build/distributions/${{ matrix.project.name }}-${{ matrix.project.version }}.zip.sha1
            build/distributions/${{ matrix.project.name }}-${{ matrix.project.version }}.zip.sha256

  publish:
    needs: [build, detect-projects]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    strategy:
      matrix: ${{fromJson(needs.detect-projects.outputs.matrix)}}
      fail-fast: false
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: ${{ matrix.project.name }}-build-artifacts
          path: artifacts

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            artifacts/${{ matrix.project.name }}-*.zip
            artifacts/${{ matrix.project.name }}-*.asc
            artifacts/${{ matrix.project.name }}-*.sha1
            artifacts/${{ matrix.project.name }}-*.sha256
          tag_name: ${{ matrix.project.name }}-${{ matrix.project.version }}
          name: ${{ matrix.project.libName }} ${{ matrix.project.version }}
          body: |
            ${{ matrix.project.libName }} version ${{ matrix.project.version }}
            ## Verification
            ```bash
            # Verify signature
            gpg --verify ${{ matrix.project.name }}-${{ matrix.project.version }}.zip.asc ${{ matrix.project.name }}-${{ matrix.project.version }}.zip
            # Verify checksums
            sha256sum -c ${{ matrix.project.name }}-${{ matrix.project.version }}.zip.sha256
            sha1sum -c ${{ matrix.project.name }}-${{ matrix.project.version }}.zip.sha1
            ```
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
